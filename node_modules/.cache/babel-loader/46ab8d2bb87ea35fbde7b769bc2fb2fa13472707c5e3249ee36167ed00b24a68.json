{"ast":null,"code":"var _jsxFileName = \"D:\\\\ORACLE\\\\15_REACT\\\\AluraFlix\\\\spotyflix\\\\src\\\\Pages\\\\Player\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport Banner from \"../../components/Banner\";\nimport styles from \"./Player.module.css\";\nimport Titulo from \"../../components/Titulo\";\nimport { useParams } from \"react-router-dom\";\nimport videos from \"../../data/db.json\";\nimport NotFound from \"../NotFound\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Player() {\n  _s();\n  const parametros = useParams();\n  const video = videos.find(video => video.id === Number(parametros.id));\n  console.log(video);\n  if (!video) return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 18\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      img: logo,\n      color: \"#58B9AE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Titulo, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"100%\",\n        height: \"100%\",\n        src: video.link,\n        title: video.titulo,\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n        allowfullscreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Player, \"/3uTXtCq3/jhP34qltkrylmEY+s=\", false, function () {\n  return [useParams];\n});\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["Banner","styles","Titulo","useParams","videos","NotFound","jsxDEV","_jsxDEV","Fragment","_Fragment","Player","_s","parametros","video","find","id","Number","console","log","fileName","_jsxFileName","lineNumber","columnNumber","children","img","logo","color","className","container","width","height","src","link","title","titulo","frameborder","allow","allowfullscreen","_c","$RefreshReg$"],"sources":["D:/ORACLE/15_REACT/AluraFlix/spotyflix/src/Pages/Player/index.jsx"],"sourcesContent":["import Banner from \"../../components/Banner\";\r\nimport styles from \"./Player.module.css\"\r\nimport Titulo from \"../../components/Titulo\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport videos from \"../../data/db.json\";\r\nimport NotFound from \"../NotFound\";\r\n\r\nfunction Player(){\r\nconst parametros = useParams()\r\nconst video = videos.find(video=> video.id === Number(parametros.id))\r\nconsole.log(video);\r\nif(!video)return <NotFound/>\r\n    return(\r\n       <>\r\n       <Banner img={logo}  color=\"#58B9AE\"/>\r\n       \r\n        <Titulo>\r\n            <h1>Player</h1>\r\n        </Titulo>\r\n\r\n            <section className={styles.container}>\r\n                <iframe width=\"100%\" height=\"100%\" \r\n                    src={video.link} \r\n                    title={video.titulo} \r\n                    frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\r\n            </section>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Player;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EACjB,MAAMC,UAAU,GAAGT,SAAS,CAAC,CAAC;EAC9B,MAAMU,KAAK,GAAGT,MAAM,CAACU,IAAI,CAACD,KAAK,IAAGA,KAAK,CAACE,EAAE,KAAKC,MAAM,CAACJ,UAAU,CAACG,EAAE,CAAC,CAAC;EACrEE,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAClB,IAAG,CAACA,KAAK,EAAC,oBAAON,OAAA,CAACF,QAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EACxB,oBACGf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACAhB,OAAA,CAACP,MAAM;MAACwB,GAAG,EAAEC,IAAK;MAAEC,KAAK,EAAC;IAAS;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEpCf,OAAA,CAACL,MAAM;MAAAqB,QAAA,eACHhB,OAAA;QAAAgB,QAAA,EAAI;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eAELf,OAAA;MAASoB,SAAS,EAAE1B,MAAM,CAAC2B,SAAU;MAAAL,QAAA,eACjChB,OAAA;QAAQsB,KAAK,EAAC,MAAM;QAACC,MAAM,EAAC,MAAM;QAC9BC,GAAG,EAAElB,KAAK,CAACmB,IAAK;QAChBC,KAAK,EAAEpB,KAAK,CAACqB,MAAO;QACpBC,WAAW,EAAC,GAAG;QAACC,KAAK,EAAC,qGAAqG;QAACC,eAAe;MAAA;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpJ,CAAC;EAAA,eACb,CAAC;AAEV;AAACX,EAAA,CArBQD,MAAM;EAAA,QACIP,SAAS;AAAA;AAAAmC,EAAA,GADnB5B,MAAM;AAuBf,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}