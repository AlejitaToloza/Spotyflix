{"ast":null,"code":"var _jsxFileName = \"D:\\\\ORACLE\\\\15_REACT\\\\AluraFlix\\\\spotyflix\\\\src\\\\Pages\\\\Player\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport Banner from \"components/Banner\";\nimport styles from \"./Player.module.css\";\nimport Titulo from \"components/Titulo\";\nimport { useParams } from \"react-router-dom\";\nimport videos from \"data/db.json\";\nimport NotFound from \"pages/NotFound\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Player() {\n  _s();\n  const [video, setVideo] = useState([]);\n  const parametros = useParams();\n  useEffect(() => {\n    fetch(`../../dat${parametros.id}`).then(response => response.json()).then(data => {\n      setVideo(...data);\n    });\n  }, []);\n\n  //const video = videos.find(video=> video.id === Number(parametros.id))\n  console.log(video);\n  if (!video) return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 18\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      img: \"player\",\n      color: \"#58B9AE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Titulo, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"100%\",\n        height: \"100%\",\n        src: video.link,\n        title: video.titulo,\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n        allowfullscreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Player, \"r34Oh22itWF2wknCSa4aOK6WWmc=\", false, function () {\n  return [useParams];\n});\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["Banner","styles","Titulo","useParams","videos","NotFound","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Player","_s","video","setVideo","parametros","fetch","id","then","response","json","data","console","log","fileName","_jsxFileName","lineNumber","columnNumber","children","img","color","className","container","width","height","src","link","title","titulo","frameborder","allow","allowfullscreen","_c","$RefreshReg$"],"sources":["D:/ORACLE/15_REACT/AluraFlix/spotyflix/src/Pages/Player/index.jsx"],"sourcesContent":["import Banner from \"components/Banner\";\r\nimport styles from \"./Player.module.css\"\r\nimport Titulo from \"components/Titulo\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport videos from \"data/db.json\";\r\nimport NotFound from \"pages/NotFound\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Player(){\r\n const [video,setVideo]= useState([])\r\n\r\nconst parametros = useParams()\r\nuseEffect(()=>{\r\n    fetch(`../../dat${parametros.id}`)\r\n    .then(response=>response.json())\r\n    .then(data=>{\r\n        setVideo(...data)\r\n    })\r\n },[])   \r\n\r\n//const video = videos.find(video=> video.id === Number(parametros.id))\r\nconsole.log(video);\r\nif(!video)return <NotFound/>\r\n    return(\r\n       <>\r\n       <Banner img=\"player\" color=\"#58B9AE\"/>\r\n        <Titulo>\r\n            <h1>Player</h1>\r\n        </Titulo>\r\n        <section className={styles.container}>\r\n        <iframe width=\"100%\" height=\"100%\" \r\n        src={video.link} \r\n        title={video.titulo} \r\n        frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\r\n\r\n        </section>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Player;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAER,QAAQ,CAAC,EAAE,CAAC;EAErC,MAAMS,UAAU,GAAGb,SAAS,CAAC,CAAC;EAC9BG,SAAS,CAAC,MAAI;IACVW,KAAK,CAAC,YAAYD,UAAU,CAACE,EAAE,EAAE,CAAC,CACjCC,IAAI,CAACC,QAAQ,IAAEA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAC/BF,IAAI,CAACG,IAAI,IAAE;MACRP,QAAQ,CAAC,GAAGO,IAAI,CAAC;IACrB,CAAC,CAAC;EACL,CAAC,EAAC,EAAE,CAAC;;EAEN;EACAC,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;EAClB,IAAG,CAACA,KAAK,EAAC,oBAAOL,OAAA,CAACJ,QAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EACxB,oBACGnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACApB,OAAA,CAACT,MAAM;MAAC8B,GAAG,EAAC,QAAQ;MAACC,KAAK,EAAC;IAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrCnB,OAAA,CAACP,MAAM;MAAA2B,QAAA,eACHpB,OAAA;QAAAoB,QAAA,EAAI;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACTnB,OAAA;MAASuB,SAAS,EAAE/B,MAAM,CAACgC,SAAU;MAAAJ,QAAA,eACrCpB,OAAA;QAAQyB,KAAK,EAAC,MAAM;QAACC,MAAM,EAAC,MAAM;QAClCC,GAAG,EAAEtB,KAAK,CAACuB,IAAK;QAChBC,KAAK,EAAExB,KAAK,CAACyB,MAAO;QACpBC,WAAW,EAAC,GAAG;QAACC,KAAK,EAAC,qGAAqG;QAACC,eAAe;MAAA;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5I,CAAC;EAAA,eACT,CAAC;AAEV;AAACf,EAAA,CA9BQD,MAAM;EAAA,QAGIT,SAAS;AAAA;AAAAwC,EAAA,GAHnB/B,MAAM;AAgCf,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}