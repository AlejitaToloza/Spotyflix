{"ast":null,"code":"var _jsxFileName = \"D:\\\\ORACLE\\\\15_REACT\\\\AluraFlix\\\\spotyflix\\\\src\\\\Pages\\\\Player\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport Banner from \"../../components/Banner\";\nimport styles from \"./Player.module.css\";\nimport Titulo from \"../../components/Titulo\";\nimport { useParams } from \"react-router-dom\";\nimport videos from \"../../data/db.json\";\nimport NotFound from \"../NotFound\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Player() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const video = videos.find(video => video.id === Number(id));\n  if (!video) return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      img: \"player\",\n      color: \"#58B9AE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Titulo, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: video.titulo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"100%\",\n        height: \"100%\",\n        src: video.link,\n        title: video.titulo,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Player, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["Banner","styles","Titulo","useParams","videos","NotFound","jsxDEV","_jsxDEV","Fragment","_Fragment","Player","_s","id","video","find","Number","fileName","_jsxFileName","lineNumber","columnNumber","children","img","color","titulo","className","container","width","height","src","link","title","frameBorder","allow","allowFullScreen","_c","$RefreshReg$"],"sources":["D:/ORACLE/15_REACT/AluraFlix/spotyflix/src/Pages/Player/index.jsx"],"sourcesContent":["import Banner from \"../../components/Banner\";\r\nimport styles from \"./Player.module.css\";\r\nimport Titulo from \"../../components/Titulo\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport videos from \"../../data/db.json\";\r\nimport NotFound from \"../NotFound\";\r\n\r\nfunction Player() {\r\n    const { id } = useParams();\r\n    const video = videos.find(video => video.id === Number(id));\r\n\r\n    if (!video) return <NotFound />;\r\n\r\n    return (\r\n        <>\r\n            <Banner img=\"player\" color=\"#58B9AE\" />\r\n            <Titulo>\r\n                <h1>{video.titulo}</h1>\r\n            </Titulo>\r\n            <section className={styles.container}>\r\n                <iframe\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    src={video.link}\r\n                    title={video.titulo}\r\n                    frameBorder=\"0\"\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n                    allowFullScreen\r\n                ></iframe>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Player;\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,KAAK,GAAGT,MAAM,CAACU,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACD,EAAE,KAAKG,MAAM,CAACH,EAAE,CAAC,CAAC;EAE3D,IAAI,CAACC,KAAK,EAAE,oBAAON,OAAA,CAACF,QAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAE/B,oBACIZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACIb,OAAA,CAACP,MAAM;MAACqB,GAAG,EAAC,QAAQ;MAACC,KAAK,EAAC;IAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCZ,OAAA,CAACL,MAAM;MAAAkB,QAAA,eACHb,OAAA;QAAAa,QAAA,EAAKP,KAAK,CAACU;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACTZ,OAAA;MAASiB,SAAS,EAAEvB,MAAM,CAACwB,SAAU;MAAAL,QAAA,eACjCb,OAAA;QACImB,KAAK,EAAC,MAAM;QACZC,MAAM,EAAC,MAAM;QACbC,GAAG,EAAEf,KAAK,CAACgB,IAAK;QAChBC,KAAK,EAAEjB,KAAK,CAACU,MAAO;QACpBQ,WAAW,EAAC,GAAG;QACfC,KAAK,EAAC,qGAAqG;QAC3GC,eAAe;MAAA;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACZ,CAAC;AAEX;AAACR,EAAA,CAzBQD,MAAM;EAAA,QACIP,SAAS;AAAA;AAAA+B,EAAA,GADnBxB,MAAM;AA2Bf,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}